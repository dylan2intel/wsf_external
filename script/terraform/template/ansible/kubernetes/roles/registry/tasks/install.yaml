
  - name: Check if registry certificate is available
    stat:
      path: "{{ k8s_registry_conf_dir }}/{{ k8s_registry_ip }}:{{ k8s_registry_port }}.crt"
    register: cert

  - name: Fetch crt from controller
    fetch:
      src: "{{ k8s_registry_conf_dir }}/{{ k8s_registry_ip }}:{{ k8s_registry_port }}.crt"
      dest: "/tmp/{{ wl_namespace }}-registry-cert-{{ k8s_registry_ip }}:{{ k8s_registry_port }}-{{ ansible_host }}.crt"
      flat: yes
    delegate_to: controller-0
    when: (hostvars['controller-0']['ansible_facts']['cert_updated'] | default('no') | bool) or (not cert.stat.exists)

  - name: Detect OS
    shell: 
      cmd: '. /etc/os-release; echo $ID'
      executable: /bin/bash
    register: os
    when: (hostvars['controller-0']['ansible_facts']['cert_updated'] | default('no') | bool) or (not cert.stat.exists)
  
  - name: copy cert to workers
    include_tasks:
      file: "install-{{ (os.stdout == 'rhel' or os.stdout =='anolis') | ternary('centos', os.stdout) }}.yaml"
    when: (hostvars['controller-0']['ansible_facts']['cert_updated'] | default('no') | bool) or (not cert.stat.exists)

  - name: restart containerd
    include_role:
      name: containerd
      tasks_from: restart
    when: (hostvars['controller-0']['ansible_facts']['cert_updated'] | default('no') | bool) or (not cert.stat.exists)

