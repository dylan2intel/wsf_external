
- name: create name space
  command: "kubectl create namespace {{ wl_namespace }}"

- name: Create ImagePullSecret
  include_role:
    name: docker_auth
  vars:
    namespace: "{{ wl_namespace }}"

- name: Customize deployment yaml for CNI
  include_role:
    name: "cni-{{ k8s_cni }}"
    tasks_from: customize-deployment.yaml
  when: ((role_path + '/../cni-' + k8s_cni + '/tasks/customize-deployment.yaml') is exists)

- name: create deployment
  command: "kubectl create --namespace {{ wl_namespace }} -f /tmp/{{ wl_namespace }}-{{ wl_kubernetes_yaml }}"

- block:
  
    - name: wait for scheduling
      shell: "timeout {{ wl_timeout[1] }}s bash -c 'until kubectl --namespace={{ wl_namespace }} wait pod --all --for=condition=Ready --field-selector=status.phase!=Succeeded --timeout=1s 1>/dev/null 2>&1; do if kubectl --namespace={{ wl_namespace }} get pod -o json | grep -q Unschedulable; then exit 1; fi; done; exit 0'"

  rescue:

    - name: debugging
      include_role: 
        name: debug

    - name: abort
      fail:
        msg: "abort due to scheduling failure"

- name: workload-execution
  include_tasks:
    file: process-traces-and-logs.yaml

- name: collect trace data
  include_role:
    name: trace
    tasks_from: collect
  when: wl_trace_modules is defined
  ignore_errors: yes

- name: print debug info 
  include_role:
    name: debug

- block:

  - name: calculate deletion condition
    set_fact: 
      should_delete_namespace: "{{ ((csp | default('static')) == 'static') or ((itr |int) < (run_stage_iterations | default(1) | int)) or ('cleanup' not in (stage | default('cleanup'))) }}"

  - name: delete deployment
    command: "kubectl --namespace={{ wl_namespace }} delete -f /tmp/{{ wl_namespace }}-{{ wl_kubernetes_yaml }} --ignore-not-found=true --grace-period=150 --timeout=5m"
    ignore_errors: yes
    when: should_delete_namespace
      
  - name: get resource types
    shell: "kubectl api-resources --namespaced -o name --no-headers | cut -f1 -d."
    register: resources
    when: should_delete_namespace

  - name: delete resources
    shell: 
      cmd: "kubectl --namespace={{ wl_namespace }} delete {{ resources.stdout_lines | join(',') }} --all --ignore-not-found=true --grace-period=150 --timeout=5m"
      executable: /bin/bash
    ignore_errors: yes
    when: should_delete_namespace
      
  - name: delete namespace
    command: "timeout {{ k8s_delete_namespace_timeout}} kubectl delete namespace {{ wl_namespace }} --grace-period=300 --timeout=10m --wait --ignore-not-found=true"
    register: delns
    until: delns.rc == 0
    retries: 10
    delay: 10
    when: should_delete_namespace

  rescue:

  - name: perform kill namespace workaround
    command: "bash -c 'kubectl replace --raw \"/api/v1/namespaces/{{ wl_namespace }}/finalize\" -f <(kubectl get ns {{ wl_namespace }} -o json | grep -v \"\\\"kubernetes\\\"\")'"
    ignore_errors: yes

