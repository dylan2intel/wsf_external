#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: detect if openebs should be installed or not
  command: "grep -q -F PersistentVolumeClaim {{ wl_logs_dir }}/kubernetes-config.yaml"
  register: install_openebs
  delegate_to: localhost
  failed_when: false

- name: Detect OS
  shell:
    cmd: ". /etc/os-release; echo $ID_LIKE"
    executable: /bin/bash
  register: os
  delegate_to: "{{ item }}"
  loop: "{{ groups['workload_hosts'] }}"
  when: install_openebs.rc == 0

- name: Install iScsi utilities
  package:
    name: "{{ (item.stdout == 'debian') | ternary('open-iscsi','iscsi-initiator-utils') }}"
    state: present
  become: true
  delegate_to: "{{ item.item }}"
  loop: "{{ os.results }}"
  when: install_openebs.rc == 0

- name: Enable iscsid
  systemd:
    name: iscsid
    state: started
    enabled: true
  become: true
  delegate_to: "{{ item.item }}"
  loop: "{{ os.results }}"
  when: install_openebs.rc == 0

- name: Get the openebs operator yaml
  get_url:
    url: "{{ k8s_openebs_operator }}"
    dest: "/tmp/{{ wl_namespace }}-openebs-operator"
  when: install_openebs.rc == 0
    
- name: Replace /var/openebs/local with /mnt/disk1
  replace:
    path: "/tmp/{{ wl_namespace }}-openebs-operator"
    regexp: /var/openebs/local
    replace: /mnt/disk1
  when: install_openebs.rc == 0

- name: Apply the openebs operator
  command: "kubectl apply -f /tmp/{{ wl_namespace }}-openebs-operator"
  when: install_openebs.rc == 0

- name: Remove temporary file
  file:
    path: "/tmp/{{ wl_namespace }}-openebs-operator"
    state: absent
  when: install_openebs.rc == 0

- name: Wait for the operator to be ready
  command: "kubectl wait --namespace=openebs pod --for=condition=Ready -l {{ k8s_openebs_provisioner }} --timeout=60s"
  register: wait_ready
  retries: 10
  delay: 10
  until: wait_ready.rc == 0
  when: install_openebs.rc == 0

