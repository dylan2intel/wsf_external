# ceph-base

ARG OS_VER="stream8"
ARG OS_IMAGE="quay.io/centos/centos"

FROM ${OS_IMAGE}:${OS_VER}
# This ceph docker file refer to the git repo(https://github.com/ceph/ceph-container.git),

ENV I_AM_IN_A_CONTAINER=1
ARG CENTOS_VER=8
ENV CEPH_VERSION=pacific

RUN export CEPH_POINT_RELEASE="-"`curl --insecure -s https://docs.ceph.com/en/latest/releases/index.html |grep pacific|grep latest |awk -F ")" '{print$1}' |awk '{print$NF}'`

# Ceph container method
LABEL ceph=True
ENV OSD_FLAVOR=default
ENV CEPH_REF=pacific
ENV CEPH_DEVEL=false

ARG  CEPH_BASE_PATH=/opt/ceph

WORKDIR   ${CEPH_BASE_PATH}

# Currently, we support the rook ceph start from pacific version.
SHELL ["/bin/bash", "-c"]
RUN yum install -y epel-release wget udev && \
    yum clean all

RUN yum install -y jq && \
    bash -c ' if [ -n "nfs-ganesha nfs-ganesha-ceph nfs-ganesha-rgw nfs-ganesha-rados-grace nfs-ganesha-rados-urls" ]; then  \
        echo "[ganesha]" > /etc/yum.repos.d/ganesha.repo ; \
        echo "name=ganesha" >> /etc/yum.repos.d/ganesha.repo ; \
    if [[ "${CEPH_VERSION}" == master ]]; then \
        echo "baseurl=https://buildlogs.centos.org/centos/\$releasever/storage/\$basearch/nfsganesha-3/" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "gpgcheck=0" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    elif [[ "${CEPH_VERSION}" == pacific ]]; then \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.5-stable/$CEPH_VERSION/el\$releasever/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ;  \
        echo "[ganesha-noarch]" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "name=ganesha-noarch" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.5-stable/$CEPH_VERSION/el\$releasever/noarch/" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    elif [[ "${CEPH_VERSION}" == octopus ]]; then  \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.3-stable/$CEPH_VERSION/el\$releasever/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
        echo "[ganesha-noarch]" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "name=ganesha-noarch" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.3-stable/$CEPH_VERSION/el\$releasever/noarch/" >> /etc/yum.repos.d/ganesha.repo ; \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ;    \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ;   \
    elif [[ "${CEPH_VERSION}" == nautilus ]]; then \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V2.8-stable/$CEPH_VERSION/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ;    \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    else \
        echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V2.7-stable/$CEPH_VERSION/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ;  \
        echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ;    \
        echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ;  \
    fi ; \
    fi ; \
    if [ -n "tcmu-runner ceph-iscsi python3-rtslib" ]; then  \
    curl -s -L https://shaman.ceph.com/api/repos/tcmu-runner/main/latest/centos/8/repo?arch=$(arch) -o /etc/yum.repos.d/tcmu-runner.repo ;  \
    if [[ "${CEPH_VERSION}" =~ master ]]; then  \
        curl -s -L https://shaman.ceph.com/api/repos/ceph-iscsi/master/latest/centos/8/repo -o /etc/yum.repos.d/ceph-iscsi.repo ; \
    elif [[ "${CEPH_VERSION}" =~ nautilus|octopus|pacific ]]; then \
        curl -s -L https://download.ceph.com/ceph-iscsi/3/rpm/el8/ceph-iscsi.repo -o /etc/yum.repos.d/ceph-iscsi.repo ; \
    else       curl -s -L https://download.ceph.com/ceph-iscsi/2/rpm/el8/ceph-iscsi.repo -o /etc/yum.repos.d/ceph-iscsi.repo ;  \
    fi ; \
    fi' && \
    yum update -y --setopt=install_weak_deps=False && \
    rpm --import 'https://download.ceph.com/keys/release.asc' && \
    if [[ "${CEPH_VERSION}" == nautilus ]]; then  \
        CEPH_MGR_K8SEVENTS="ceph-mgr-k8sevents$CEPH_POINT_RELEASE";  \
        if [[ -n "$CEPH_POINT_RELEASE" ]]; then  \
            CPR=$CEPH_POINT_RELEASE ;  \
            if [[ ${CPR:1:2} -eq 14 ]] && [[ ${CPR:4:1} -eq 2 ]] && [[ ${CPR:6} -lt 5 ]]; then  \
                CEPH_MGR_K8SEVENTS="" ;  \
            fi ; \
        fi ; \
    fi && \
    bash -c '   if [[ "${CEPH_VERSION}" =~ master ]] || ${CEPH_DEVEL}; then \
        ARCH=$(arch);  \
        if [[ "${ARCH}" == "aarch64" ]]; then  \
            ARCH="arm64";  \
        fi ;  \
        REPO_URL=$(curl -s "https://shaman.ceph.com/api/search/?project=ceph&distros=centos/8/${ARCH}&flavor=${OSD_FLAVOR}&ref=${CEPH_REF}&sha1=latest" | jq -r .[0].url);     RELEASE_VER=0 ; \
        if [[ "${OSD_FLAVOR}" == "crimson" ]]; then \
            CRIMSON_PACKAGES="ceph-crimson-osd$CEPH_POINT_RELEASE"; \
        fi ; \
    else  \
       RELEASE_VER=1 ; \
       REPO_URL="http://download.ceph.com/rpm-${CEPH_VERSION}/el8/"; \
    fi &&  \
    rpm -Uvh "$REPO_URL/noarch/ceph-release-1-${RELEASE_VER}.el8.noarch.rpm" && \
    source /etc/os-release && \
    if [[ "${CENTOS_VER}" == "${VERSION_ID}" ]]; then \
        yum install -y dnf-plugins-core ; \
        yum copr enable -y tchaikov/python-scikit-learn ; \
        yum copr enable -y tchaikov/python3-asyncssh ; \
    fi ' && \
    yum install -y --setopt=install_weak_deps=False --enablerepo=powertools  \
    ca-certificates   \
    e2fsprogs     \
    ceph-common$CEPH_POINT_RELEASE \
    ceph-mon$CEPH_POINT_RELEASE \
    ceph-osd$CEPH_POINT_RELEASE  \
    ceph-mds$CEPH_POINT_RELEASE cephfs-mirror$CEPH_POINT_RELEASE  \
    rbd-mirror$CEPH_POINT_RELEASE \
    ceph-mgr$CEPH_POINT_RELEASE ceph-mgr-cephadm$CEPH_POINT_RELEASE ceph-mgr-dashboard$CEPH_POINT_RELEASE ceph-mgr-diskprediction-local$CEPH_POINT_RELEASE ceph-mgr-k8sevents$CEPH_POINT_RELEASE ceph-mgr-rook$CEPH_POINT_RELEASE python3-saml   \
    ceph-grafana-dashboards$CEPH_POINT_RELEASE  \
    kmod   \
    lvm2  gdisk  smartmontools   nvme-cli  libstoragemgmt  ceph-radosgw$CEPH_POINT_RELEASE libradosstriper1$CEPH_POINT_RELEASE \
    nfs-ganesha nfs-ganesha-ceph nfs-ganesha-rgw nfs-ganesha-rados-grace nfs-ganesha-rados-urls \
    tcmu-runner ceph-iscsi python3-rtslib  \
    attr ceph-fuse$CEPH_POINT_RELEASE rbd-nbd$CEPH_POINT_RELEASE \
    ${CRIMSON_PACKAGES}  \
    ceph-immutable-object-cache$CEPH_POINT_RELEASE  \
    python3-scikit-learn   &&  \
    INITIAL_SIZE="$(bash -c 'sz="$(du -sm --exclude=/proc /)" ; echo "${sz%*/}"')" && \
    echo 'Postinstall cleanup' && \
    (rm -rf "/usr/bin/hyperkube /usr/bin/etcd /usr/bin/systemd-analyze /usr/share/hwdata/{iab.txt,oui.txt} /etc/profile.d/lang.sh" &&  \
    yum clean all &&  \
    rpm -q  ca-certificates e2fsprogs \
    ceph-common$CEPH_POINT_RELEASE \
    ceph-mon$CEPH_POINT_RELEASE \
    ceph-osd$CEPH_POINT_RELEASE \
    ceph-mds$CEPH_POINT_RELEASE \
    cephfs-mirror$CEPH_POINT_RELEASE rbd-mirror$CEPH_POINT_RELEASE  \
    ceph-mgr$CEPH_POINT_RELEASE ceph-mgr-cephadm$CEPH_POINT_RELEASE ceph-mgr-dashboard$CEPH_POINT_RELEASE ceph-mgr-diskprediction-local$CEPH_POINT_RELEASE ceph-mgr-k8sevents$CEPH_POINT_RELEASE ceph-mgr-rook$CEPH_POINT_RELEASE python3-saml \
    ceph-grafana-dashboards$CEPH_POINT_RELEASE \
    kmod \
    lvm2 \
    gdisk \
    smartmontools \
    nvme-cli  \
    libstoragemgmt \
    ceph-radosgw$CEPH_POINT_RELEASE libradosstriper1$CEPH_POINT_RELEASE \
    nfs-ganesha nfs-ganesha-ceph nfs-ganesha-rgw nfs-ganesha-rados-grace nfs-ganesha-rados-urls  \
    tcmu-runner ceph-iscsi python3-rtslib  \
    attr ceph-fuse$CEPH_POINT_RELEASE rbd-nbd$CEPH_POINT_RELEASE  \
    ${CRIMSON_PACKAGES}  \
    ceph-immutable-object-cache$CEPH_POINT_RELEASE \
    python3-scikit-learn ) && \
    sed -i -e 's/udev_rules = 1/udev_rules = 0/' -e 's/udev_sync = 1/udev_sync = 0/' -e 's/obtain_device_list_from_udev = 1/obtain_device_list_from_udev = 0/' /etc/lvm/lvm.conf && \
    grep -sqo "udev_sync = 0" /etc/lvm/lvm.conf && \
    grep -sqo "udev_rules = 0" /etc/lvm/lvm.conf && \
    grep -sqo "obtain_device_list_from_udev = 0" /etc/lvm/lvm.conf && \
    rm -rf /etc/{selinux,systemd,udev} \
    /lib/{lsb,udev} \
    /tmp/*  \
    /usr/lib{,64}/{locale,udev,dracut}  \
    /usr/share/{doc,info,locale,man} \
    /usr/share/{bash-completion,pkgconfig/bash-completion.pc} \
    /var/log/*  \
    /var/tmp/* && \
    find  / -xdev -name "*.pyc" -o -name "*.pyo" -exec rm -f {} \; && \
    if [ -f /usr/bin/ceph-dencoder ]; then \
    gzip -9 /usr/bin/ceph-dencoder; \
    fi && \
    bash -c ' \
    function ifstrip () { if compgen -g "$1"; then strip -s "$1"; fi } &&  \
    ifstrip /usr/lib{,64}/ceph/erasure-code/* &&  \
    ifstrip /usr/lib{,64}/rados-classes/* && \
    ifstrip /usr/lib{,64}/python*/{dist,site}-packages/{rados,rbd,rgw}.*.so &&  \
    ifstrip /usr/bin/{crushtool,monmaptool,osdmaptool}' && \
    rm -f /usr/lib/ceph/mgr/dashboard/static/AdminLTE-*/plugins/datatables/extensions/TableTools/images/psd/* &&  \
    find /var/log/ -type f -exec truncate -s 0 {} \; && \
    FINAL_SIZE="$(bash -c 'sz="$(du -sm --exclude=/proc /)" ; echo "${sz%*/}"')" && \
    REMOVED_SIZE=$((INITIAL_SIZE - FINAL_SIZE)) &&  \
    echo "Cleaning process removed ${REMOVED_SIZE}MB" &&  \
    echo "Dropped container size from ${INITIAL_SIZE}MB to ${FINAL_SIZE}MB" && \
    rpm -q ca-certificates  \
    e2fsprogs \
    ceph-common$CEPH_POINT_RELEASE \
    ceph-mon$CEPH_POINT_RELEASE  \
    ceph-osd$CEPH_POINT_RELEASE \
    ceph-mds$CEPH_POINT_RELEASE cephfs-mirror$CEPH_POINT_RELEASE  \
    rbd-mirror$CEPH_POINT_RELEASE \
    ceph-mgr$CEPH_POINT_RELEASE \
    ceph-mgr-cephadm$CEPH_POINT_RELEASE \
    ceph-mgr-dashboard$CEPH_POINT_RELEASE \
    ceph-mgr-diskprediction-local$CEPH_POINT_RELEASE ceph-mgr-k8sevents$CEPH_POINT_RELEASE ceph-mgr-rook$CEPH_POINT_RELEASE python3-saml     \
    ceph-grafana-dashboards$CEPH_POINT_RELEASE   \
    kmod  lvm2  gdisk  smartmontools  nvme-cli libstoragemgmt  \
    ceph-radosgw$CEPH_POINT_RELEASE \
    libradosstriper1$CEPH_POINT_RELEASE \
    nfs-ganesha nfs-ganesha-ceph nfs-ganesha-rgw nfs-ganesha-rados-grace nfs-ganesha-rados-urls \
    tcmu-runner ceph-iscsi python3-rtslib     \
    attr ceph-fuse$CEPH_POINT_RELEASE rbd-nbd$CEPH_POINT_RELEASE  \
    ${CRIMSON_PACKAGES}   \
    ceph-immutable-object-cache$CEPH_POINT_RELEASE    \
    python3-scikit-learn  && \
    echo 'Packages verified successfully'