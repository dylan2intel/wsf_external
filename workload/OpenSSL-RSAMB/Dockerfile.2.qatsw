# openssl-rsamb-qat-sw

# Copyright (c) 2022 Intel Corporation
# SPDX-License-Identifier: Apache License 2.0

ARG OS_VER=8.6
ARG OS_IMAGE=rockylinux
FROM ${OS_IMAGE}:${OS_VER} AS build
RUN dnf -y install epel-release dnf-plugins-core
RUN dnf config-manager --set-enabled powertools
RUN dnf group -y --nobest install "Development Tools"
RUN dnf -y install cpuid cmake openssl-devel pcre pcre-devel libarchive nasm

ARG OPENSSL_VER="1_1_1m"
ARG OPENSSL_REPO="https://github.com/openssl/openssl.git"
RUN git clone -b OpenSSL_${OPENSSL_VER} ${OPENSSL_REPO}
RUN cd /openssl && \
    ./config && \
    make depend && \
    make -j && \
    make install_sw

ARG IPP_CRYPTO_VER="ippcp_2021.5"
ARG IPP_CRYPTO_REPO="https://github.com/intel/ipp-crypto.git"
RUN git clone -b ${IPP_CRYPTO_VER} ${IPP_CRYPTO_REPO} && \
    cd /ipp-crypto/sources/ippcp/crypto_mb && \
    cmake . -B"../build" \
      -DOPENSSL_INCLUDE_DIR=/usr/local/include/openssl \
      -DOPENSSL_LIBRARIES=/usr/local/lib64 \
      -DOPENSSL_ROOT_DIR=/usr/local/bin/openssl && \
    cd ../build && \
    make -j crypto_mb && \
    make install

ARG IPSEC_MB_VER="v1.1"
ARG IPSEC_MB_REPO="https://github.com/intel/intel-ipsec-mb.git"
RUN git clone -b ${IPSEC_MB_VER} ${IPSEC_MB_REPO} && \
    cd /intel-ipsec-mb && \
    make -j SAFE_DATA=y SAFE_PARAM=y SAFE_LOOKUP=y && \
    make install NOLDCONFIG=y PREFIX=/usr/local/

ARG QAT_ENGINE_VER="v0.6.11"
ARG QAT_ENGINE_REPO="https://github.com/intel/QAT_Engine.git"
RUN git clone -b ${QAT_ENGINE_VER} ${QAT_ENGINE_REPO} && \
    cd /QAT_Engine && \
    ./autogen.sh && \
    ./configure \
      --with-openssl_install_dir=/usr/local/ \
      --enable-multibuff_offload \
      --enable-multibuff_ecx \
      --enable-ipsec_offload \
      --enable-qat_sw && \
    make -j && \
    make install

FROM ${OS_IMAGE}:${OS_VER}
RUN yum install -y numactl
RUN yum update -y && yum upgrade -y

COPY --from=build /usr/local/ /usr/local/
ENV  OPENSSL_ENGINES=/usr/local/lib/engines-1.1

COPY script/run_test.sh /
RUN  mkfifo /export-logs
CMD  (/run_test.sh; echo $? > status) 2>&1 | tee output.logs && \
     tar cf /export-logs status output.logs && \
     sleep infinity
