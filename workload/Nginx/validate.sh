#!/bin/bash -e

WORKLOAD=${WORKLOAD:-async_nginx}
NODE=${1:-1}
MODE=${2:-https}
QATACCL=${3:-async}
GETFILE=${GETFILE:-index.html}
CLIENT_CPU_LISTS=${CLIENT_CPU_LISTS:-0} 
NGINX_CPU_LISTS=${NGINX_CPU_LISTS:0}

ARCH="intel"

# common parameters
NGINX_SERVICE_NAME=${NGINX_SERVICE_NAME:-nginx-server-service}
if [[ $MODE == "http" ]]; then
  PORT=${HTTP_PORT:-8080}
else
  PORT=${HTTPS_PORT:-4400}
fi

# server tunable parameters
if [ ! $NGINX_WORKERS ]; then
  NGINX_WORKERS=${4:-4}
fi

# client tunable parameters
if [[ $MODE == "http" ]]; then
  REQUESTS=${REQUESTS:-1000000}
  CONCURRENCY=${CONCURRENCY:-300}
else
  REQUESTS=${REQUESTS:-200000}
  CONCURRENCY=${CONCURRENCY:-100}
fi

PROTOCOL=${PROTOCOL:-TLSv1.3}
CURVE=${CURVE:-secp384r1}

# Logs Setting
DIR="$( cd "$( dirname "$0" )" &> /dev/null && pwd )"
. "$DIR/../../script/overwrite.sh"

if [ ! $CLIENT_CPU_NUM ]; then
  CLIENT_CPU_NUM=$NGINX_WORKERS
fi

if [[ $PROTOCOL == "TLSv1.3" ]]; then
  CIPHER=${CIPHER:-TLS_AES_128_GCM_SHA256}
else
  CIPHER=${CIPHER:-AES128-GCM-SHA256}
fi

if [[ $CIPHER == "AES128-SHA" ]] || [[ $CIPHER == "AES128-GCM-SHA256" ]] || [[ $CIPHER == "TLS_AES_128_GCM_SHA256" ]] ; then
  CERT=rsa2048
elif [[ $CIPHER == "ECDHE-ECDSA-AES128-SHA" ]] ; then
  CERT=ecdheecdsa
elif [[ $CIPHER == "ECDHE-RSA-AES128-SHA" ]] ; then
  CERT=ecdhersa
fi

echo NGINX_WORKERS:$NGINX_WORKERS
echo CLIENT_CPU_NUM:$CLIENT_CPU_NUM
echo NODE:$NODE
echo WORKLOAD:$WORKLOAD
echo MODE:$MODE
echo PORT:$PORT
echo QATACCL:$QATACCL
echo PROTOCOL:$PROTOCOL
echo CIPHER:$CIPHER
echo CERT:$CERT
echo GETFILE:$GETFILE

EVENT_TRACE_PARAMS="roi,go,Client Node 1 Get final results for all vclients"

# Workload Setting
WORKLOAD_PARAMS=(NGINX_SERVICE_NAME NODE MODE PORT QATACCL REQUESTS CONCURRENCY NUSERS NTHREADS DURATION PROTOCOL CIPHER CURVE CERT CLIENT_CPU_NUM NGINX_WORKERS OPENSSL_CLIENTS ARCH SECTION_NAME SERVICES_ENABLED CY_INSTANCES PROCESSES GETFILE)

# Docker Setting
if [[ $WORKLOAD == "nginx_original" ]] || [[ $WORKLOAD == "nginx_original_MILAN" ]]; then
  DOCKER_IMAGE="$DIR/Dockerfile.1.original.intel"
elif [[ $WORKLOAD == "nginx_qatsw" ]]; then
  DOCKER_IMAGE="$DIR/Dockerfile.2.qatsw.intel"
fi
DOCKER_OPTIONS="-e WORKLOAD=$WORKLOAD -e NGINX_SERVICE_NAME=$NGINX_SERVICE_NAME -e NODE=$NODE -e MODE=$MODE -e PORT=$PORT -e QATACCL=$QATACCL -e REQUESTS=$REQUESTS -e CONCURRENCY=$CONCURRENCY -e -NUSERS=$NUSERS -e NTHREADS=$NTHREADS -e DURATION=$DURATION -e PROTOCOL=$PROTOCOL -e CIPHER=$CIPHER -e CURVE=$CURVE -e CERT=$CERT -e CLIENT_CPU_NUM=$CLIENT_CPU_NUM -e NGINX_WORKERS=$NGINX_WORKERS -e OPENSSL_CLIENTS=$OPENSSL_CLIENTS -e ARCH=$ARCH -e SECTION_NAME=$SECTION_NAME -e SERVICES_ENABLED=$SERVICES_ENABLED -e CY_INSTANCES=$CY_INSTANCES -e PROCESSES=$PROCESSES"

# Kubernetes Setting
RECONFIG_OPTIONS="-DWORKLOAD=$WORKLOAD -DNGINX_SERVICE_NAME=$NGINX_SERVICE_NAME -DNODE=$NODE -DMODE=$MODE -DPORT=$PORT -DQATACCL=$QATACCL -DREQUESTS=$REQUESTS -DCONCURRENCY=$CONCURRENCY -DNUSERS=$NUSERS -DNTHREADS=$NTHREADS -DDURATION=$DURATION -DPROTOCOL=$PROTOCOL -DCIPHER=$CIPHER -DCURVE=$CURVE -DCERT=$CERT -DCLIENT_CPU_NUM=$CLIENT_CPU_NUM -DNGINX_WORKERS=$NGINX_WORKERS -DOPENSSL_CLIENTS=$OPENSSL_CLIENTS -DDOCKER_IMAGE=$DOCKER_IMAGE -DK_ARCH=$ARCH -DSECTION_NAME=$SECTION_NAME -DSERVICES_ENABLED=$SERVICES_ENABLED -DCY_INSTANCES=$CY_INSTANCES -DPROCESSES=$PROCESSES -DGETFILE=$GETFILE -DCLIENT_CPU_LISTS=$CLIENT_CPU_LISTS -DNGINX_CPU_LISTS=$NGINX_CPU_LISTS"

JOB_FILTER="job-name=client"

# Script Setting
SCRIPT_ARGS="$MODE"

. "$DIR/../../script/validate.sh"
